{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ABS_kittustoragedata",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ABS_kittustoragedata",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"parameters{",
				"     filename as string",
				"}",
				"source(output(",
				"          {Sale ID} as short,",
				"          Product as string,",
				"          Quantity as short,",
				"          {Price per Unit} as double,",
				"          {Total Price} as double,",
				"          {Sale Date} as date",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'source',",
				"     folderPath: 'csv',",
				"     fileName: 'sales_data.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'destination',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['jjj.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {Sale ID},",
				"          Product,",
				"          Quantity,",
				"          {Price per Unit},",
				"          {Total Price},",
				"          {Sale Date}",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}